IF   (DYNAMIC_OSGSPRITES)
    ADD_DEFINITIONS(-DOSGSPRITES_LIBRARY)
ELSE (DYNAMIC_OSGSPRITES)
    ADD_DEFINITIONS(-DOSGSPRITES_LIBRARY_STATIC)
ENDIF(DYNAMIC_OSGSPRITES)

SET(LIB_NAME osgSprites)

SET( HEADER_PATH ${CMAKE_SOURCE_DIR}/include/osgSprites )

SET(LIB_PUBLIC_HEADERS
        ${HEADER_PATH}/Sprites.h
        ${HEADER_PATH}/TexturePalette.h
	)
	
ADD_LIBRARY(${LIB_NAME} ${OSGSPRITES_USER_DEFINED_DYNAMIC_OR_STATIC}
    ${LIB_PUBLIC_HEADERS}
    Sprites.cpp
    TexturePalette.cpp
	)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include 
					${OSG_INCLUDE_DIR} )

IF (WIN32)
  LINK_EXTERNAL(${LIB_NAME} ${TARGET_EXTERNAL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY} )
ELSE(WIN32)
  LINK_EXTERNAL(${LIB_NAME} ${TARGET_EXTERNAL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY} )
ENDIF(WIN32)


LINK_WITH_VARIABLES(${LIB_NAME} OSG_LIBRARY OSGDB_LIBRARY OPENTHREADS_LIBRARY)

LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})

# Although most parts of this project use macros defined in
# $PROJECT/CMakeModules/osgSpriteMacroUtils, the core library itself has no single
# SETUP_ macro that will handle the installation details. For this reason, we'll
# put the install directives directly into this CMakeLists file (for now).
INSTALL(TARGETS ${LIB_NAME}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
	LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
	RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
)

